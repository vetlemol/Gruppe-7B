red = circle(15, "solid", "red") # Skriver om slik at koden skal være lettere å lese og slik at det blir mindre koding
blue = circle(35, "solid", "blue")
green = circle(25, "solid", "green")
orange = circle(45, "solid", "Orange")
black = circle(5, "solid", "Black")
white = circle(45, "solid", "transparent")
C = "center" 



GB = underlay-align(C,C, # underlay-align brukes for å putte sirklene oppå hverandre
  orange, 
  blue)

BG = underlay-align(C,C,
  GB, 
  green)

GR = underlay-align(C,C,
  BG, 
  red)

Del1 = underlay-align(C,C,
  GR, 
  black)

Del2 = underlay-xy( #underlay-xy brukes for å plassere de svarte dottene mot høyere slik at det blir 3 forskjellig "pinner"
  Del1,
  200, 50, 
  black)

start = underlay-xy(
  Del2,
  400, 50, 
  black)

start # Dette starter koden og viser første bilde på panelet til høyre


S1 = underlay-xy(underlay-xy(underlay-align(C, C, #Dette er mal for resten av sirklene, herfra og nedover er koding for det meste copy and paste hvor noen variabler blir byttet ut underlay-align hvis flere av sirklene skal bli stacket oppå hverandre
      underlay-align(C,C, GB, green),
      black),
  200, 50,
    underlay-align(
      C, C,
      red,
      black)),
  400, 50,
  black)
  
 

S1

S2 = underlay-xy(underlay-xy(underlay-align(C, C,
      GB,
      black),
  200, 50,
    underlay-align(
      C, C,
      red,
      black)),
  400, 50,
  underlay-align(C, C,
    green, black))

S2



S3 = underlay-xy(underlay-xy(underlay-align(C, C,
      GB,
      black),
  200, 50,
    black),
  400, 50,
  underlay-align(C, C,
    green, underlay-align(C, C, red, black)))
  
S3



S4 = underlay-xy(underlay-xy(underlay-align(C, C,
      orange,
      black),
    200, 20,
    underlay-align(C, C,
      blue,
      black)),
  400, 40,
  underlay-align(C, C,
    green, underlay-align(C, C, red, black)))

S4

S5 = underlay-xy(underlay-xy(underlay-align(C, C,
      underlay-align(C,C, orange, red),
        black),
    200, 20,
    underlay-align(C, C,
      blue,
        black)),
  400, 40,
  underlay-align(C, C,
      green, black))

S5


S6 = underlay-xy(underlay-xy(underlay-align(C, C,
      underlay-align(C, C, orange, red),
        black),
    200, 20,
    underlay-align(C, C,
      underlay-align(C, C,blue, green),
        black)),
  400, 40,
  black)
  
S6

S7 = underlay-xy(underlay-xy(underlay-align(C, C,
      orange,
        black),
    200, 20,
    underlay-align(C, C,
      underlay-align(C, C,blue, underlay-align(C,C, green, red)),
        black)),
  400, 40,
  black)

S7

#Observerer at steg 8 er det speilvendte av steg 7 i den mentale modellen, benytter flip-horizontal funksjon for å speiel outputen
s8 = flip-horizontal(s7)

s8

#Innser at resten av stegene kan løses ved å speile trekkene i motsatt rekkefølge. Konkluderer med at siden starttilstanden og sluttilstanden er lik bare speilet ovenfor hverandre; vil de optimale trekkene fra én er halveis i spillet tilsvare de samme trekkene fra første halvdel, men speilet i motsatt rekkefølge
s9 = flip-horizontal(s6)

s9

s10 = flip-horizontal(s5)

s10

s11 = flip-horizontal(s4)

s11

s12 = flip-horizontal(s3)

s12

s13 = flip-horizontal(s2)

s13

s14 = flip-horizontal(s1)

s14

Slutt = flip-horizontal(start)

Slutt # Kjører siste bilde i panelet til høyre






